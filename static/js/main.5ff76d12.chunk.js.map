{"version":3,"sources":["SeasonDisplay.js","index.js"],"names":["SeasonDisplay","props","lat","month","latitude","Date","getMonth","react_default","a","createElement","className","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","errmsg","_this2","window","navigator","geolocation","getCurrentPosition","position","setState","coords","err","message","src_SeasonDisplay_0","style","width","height","React","Component","ReactDom","render","src_App","document","querySelector"],"mappings":"kMAYA,IAwBeA,EAxBQ,SAAAC,GAEnB,IAXeC,EAAKC,EAYpB,MAAY,YAZGD,EAWUD,EAAMG,UAXXD,GAWqB,IAAIE,MAAOC,YAV/C,GAAKH,EAAM,EACTD,EAAI,EAAI,SAAU,SAGlBA,EAAI,EAAI,SAAU,UASjBK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,+BAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,wBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iCAMlBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qCACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,mBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wCCzBfC,cACF,SAAAA,EAAYV,GAAM,IAAAW,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACdC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMd,KACDkB,MAAO,CACRjB,IAAK,KACLkB,OAAQ,IAJER,mFAQE,IAAAS,EAAAN,KAChBO,OAAOC,UAAUC,YAAYC,mBACzB,SAAAC,GAAQ,OAAIL,EAAKM,SAAS,CAAEzB,IAAIwB,EAASE,OAAOxB,YAChD,SAAAyB,GAAG,OAAGR,EAAKM,SAAS,CAACP,OAAOS,EAAIC,6CAOxC,OAAGf,KAAKI,MAAMjB,MAAQa,KAAKI,MAAMC,OAEzBb,EAAAC,EAAAC,cAACsB,EAAD,CAAgB3B,SAAUW,KAAKI,MAAMjB,OAGzCa,KAAKI,MAAMjB,KAAOa,KAAKI,MAAMC,OAErBb,EAAAC,EAAAC,cAAA,4BAAoBM,KAAKI,MAAMC,OAA/B,KAIJb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAasB,MAAO,CAACC,MAAO,QAASC,OAAQ,UACtE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,iBAEFH,EAAAC,EAAAC,cAAA,kBAlCgB0B,IAAMC,WAyCxBC,IAASC,OAAO/B,EAAAC,EAAAC,cAAC8B,EAAD,MAASC,SAASC,cAAc","file":"static/js/main.5ff76d12.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SeasonDisplay.css';\r\n\r\nfunction getSeason(lat, month){\r\nif(month>2 && month<9){\r\n    return lat>0 ? 'summer': 'winter';\r\n} \r\nelse{\r\n    return lat>0 ? 'winter': 'summer';\r\n}\r\n}\r\n\r\nconst  SeasonDisplay = props =>{\r\n\r\n    const season = getSeason(props.latitude, new Date().getMonth());\r\n    if(season==='summer'){\r\n        return(\r\n            <div className=\"ui container season summer\">\r\n                <i className=\"sun icon icon-left massive\"></i>\r\n             <h1 className=\"season\">Lets hit the beech!!</h1>\r\n             <i className=\"sun icon icon-right massive\"></i>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n        <div className=\"ui container season winter\">\r\n        <i className=\"snowflake icon icon-left massive\"></i>\r\n        <h1 className=\"season\">Chilly winter!!</h1>\r\n        <i className=\"snowflake icon icon-right massive\"></i>\r\n       </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SeasonDisplay;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport SeasonDisplay from './SeasonDisplay';\r\n\r\nclass App extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            lat: null,\r\n            errmsg: \"\"\r\n        }\r\n     }\r\n\r\n     componentDidMount(){\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            position => this.setState({ lat:position.coords.latitude }),\r\n            err =>this.setState({errmsg:err.message})\r\n        );\r\n     }\r\n\r\n    \r\n  render() {\r\n\r\n    if(this.state.lat && !this.state.errmsg){\r\n        return (\r\n            <SeasonDisplay  latitude={this.state.lat} />\r\n        );\r\n       }\r\n    if(!this.state.lat && this.state.errmsg){\r\n        return (\r\n                <div> errormessage={this.state.errmsg} </div>\r\n            );\r\n        }\r\n         return (\r\n            <div className=\"ui segment\" style={{width: \"100vw\", height: \"100vh\"}}>\r\n  <div className=\"ui active dimmer\">\r\n    <div className=\"ui text loader\">Please Allow</div>\r\n  </div>\r\n  <p></p>\r\n</div>\r\n            );\r\n         }\r\n}\r\n\r\n\r\nReactDom.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}